Junior JAVA developer assesment test
------------------------------------
Write "BACONATOR" - a Java 12 Spring Boot application conforming the following specification:
    - providing REST interface (use JAX-RS style) with the "bacon" endpoint "/give-me-bacon/{howmuch}"
    - upon accessing this endpoint, following happens:
        - as many times as specified in {howmuch} path parameter of the "bacon" endpoint your app
          retrieves JSON array of string from https://baconipsum.com/api/?type=all-meat&paras=1 using standard Java 12 HTTP client
        - application takes note of retrieval start and end timestamp
        - "runId" field is a random-generated ID (for example UUID) of request/response pair
        - "items" is array of responses from external bacon service
        - "data" field inside "items" field in output is actual data retrieved from external service
        - output contains start and end timestamps for both full request and for each item as well
        - example of pretty-printed application/json return data:
        {
         "runId" : "abcdef",
         "start": 1234646,
         "end": 12354587
         "items" [
            {
             "start": 1234646,
             "end": 12354587,
             "duration": "3h 19m 56s 46ms",
             "data": ["Alcatra strip cow bacon..."]
            }
          ]
        }
    - example - app is running on localhost, port 8080
    - in the browser I type the following: "http://localhost:8080/give-me-bacon/5"
    - I receive following response:
        {
         "runId" : "axgdas",
         "items" [
            {
             "start": 1234646,
             "end": 12354587
             "data": ["Alcatra strip cow bacon..."]
            },
            {
             "start":
             ...
            }
             ...
          ]
        }
        
Don't hesitate to use coding tutorials and Stack Overflow!

Acceptance criteria:

MUST your application must produce runnable spring boot war conforming assignment - if you are unsure how to produce runnable spring boot war application, just follow tutorials
MUST fork this repo and deliver your homework as pull request
MUST use maven/gradle or any other build system
MUST conform to Google Java style guide - https://google.github.io/styleguide/javaguide.html - if you are unsure, use auto-formatting options
PLUS focus on code readability
PLUS use JDK 11 HTTP client 
PLUS retrieve JSON data asynchronously
PLUS use RxJava (for example to asynchronou data retrieval)
PLUS allow CORS for everyone
PLUS implement spring security layer with basic auth
PLUS provide REST endpoint to retrieve historic data by their runId (cache in memory)
PLUS cache historic run data in embedded database on disk

